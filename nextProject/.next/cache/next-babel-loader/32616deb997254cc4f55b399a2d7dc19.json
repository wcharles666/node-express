{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/charles/Documents/GitHub/nextProject/pages/article/[id].tsx\";\n\nvar __jsx = React.createElement;\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport * as React from 'react';\n\nvar ArticalDetail = function ArticalDetail(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.show.name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 29\n    }\n  }) : null);\n};\n\nArticalDetail.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default ArticalDetail;","map":{"version":3,"sources":["/Users/charles/Documents/GitHub/nextProject/pages/article/[id].tsx"],"names":["Layout","fetch","React","ArticalDetail","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFJ,EAGKJ,KAAK,CAACC,IAAN,CAAWI,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAHhE,CADkB;AAAA,CAAtB;;AAQAP,aAAa,CAACQ,eAAd,GAAgC,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,EADoB,GACbD,OAAO,CAACE,KADK,CACpBD,EADoB;AAAA;AAAA,2CAEVZ,KAAK,wCAAiCY,EAAjC,EAFK;;AAAA;AAEtBE,UAAAA,GAFsB;AAAA;AAAA,2CAGTA,GAAG,CAACC,IAAJ,EAHS;;AAAA;AAGtBX,UAAAA,IAHsB;AAK5BY,UAAAA,OAAO,CAACC,GAAR,yBAA6Bb,IAAI,CAACC,IAAlC;AAL4B,2CAOrB;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAPqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAUA,eAAeF,aAAf","sourcesContent":["import Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport * as React from 'react';\n\nconst ArticalDetail = (props: any) => (\n    <Layout>\n        <h1>{props.show.name}</h1>\n        <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n        {props.show.image ? <img src={props.show.image.medium} /> : null}\n    </Layout>\n);\n\nArticalDetail.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n    const show = await res.json();\n\n    console.log(`Fetched show: ${show.name}`);\n\n    return { show };\n};\n\nexport default ArticalDetail;"]},"metadata":{},"sourceType":"module"}